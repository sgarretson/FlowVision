# Docker Compose configuration for testing environments
version: '3.8'

services:
  # Main application for testing
  app-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://test_user:test_password@postgres-test:5432/flowvision_test
      - NEXTAUTH_SECRET=test_secret_key_for_testing_only
      - NEXTAUTH_URL=http://localhost:3000
      - OPENAI_API_KEY=test_key
      - OPENAI_MODEL=gpt-3.5-turbo
    depends_on:
      postgres-test:
        condition: service_healthy
    volumes:
      - ./tests:/app/tests
      - test_logs:/app/logs
    networks:
      - test_network
    command: |
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run dev
      "

  # Test PostgreSQL database
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: flowvision_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - '5433:5432'
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - test_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U test_user -d flowvision_test']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for testing
  redis-test:
    image: redis:7-alpine
    ports:
      - '6380:6379'
    networks:
      - test_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  test_postgres_data:
    driver: local
  test_logs:
    driver: local

networks:
  test_network:
    driver: bridge
